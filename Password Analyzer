import re
import hashlib
import time
import sys

# 🛑 Common insecure or default passwords to check against
COMMON_WORDS = {"password", "admin", "letmein", "welcome", "123456", "qwerty"}

# 🔍 Check if password contains any common dictionary words
def contains_dictionary_word(password):
    return any(word in password.lower() for word in COMMON_WORDS)

# 🧠 Evaluate password and return a score with detailed criteria results
def score_password(password):
    score = 0
    checks = []

    # 📋 Each criterion added as (description, passed)
    checks.append(("Length (8+ chars)", len(password) >= 8))
    checks.append(("Length (12+ chars)", len(password) >= 12))
    checks.append(("Uppercase letter", bool(re.search(r"[A-Z]", password))))
    checks.append(("Lowercase letter", bool(re.search(r"[a-z]", password))))
    checks.append(("Number", bool(re.search(r"[0-9]", password))))
    checks.append(("Symbol", bool(re.search(r"[!@#$%^&*(),.?\":{}|<>]", password))))
    checks.append(("No common dictionary word", not contains_dictionary_word(password)))

    for _, passed in checks:
        if passed:
            score += 1
    return score, checks

# 📊 Rate password based on the score
def rate_strength(score):
    if score >= 6:
        return "Strong"
    elif score >= 4:
        return "Moderate"
    else:
        return "Weak"

# ⏳ Simulated "analyzing" spinner for effect
def loading_animation(duration=1.5):
    spinner = "|/-\\"
    for _ in range(int(duration * 10)):
        for frame in spinner:
            sys.stdout.write(f"\rAnalyzing... {frame}")
            sys.stdout.flush()
            time.sleep(0.05)
    sys.stdout.write("\r" + " " * 30 + "\r")

# 🚪 Main password loop with checklist feedback
if __name__ == "__main__":
    print("🛡️  Password Analyzer (type 'exit' to quit)\n")

    while True:
        pwd = input("🔐 Enter a password to analyze: ").strip()
        if pwd.lower() == "exit":
            print("👋 Goodbye!")
            break
        if not pwd:
            print("⚠️  Please enter a password.\n")
            continue

        loading_animation()

        score, checks = score_password(pwd)
        strength = rate_strength(score)

        print(f"\nPassword Strength: {strength}\n")
        print("Criteria Check:")
        for label, passed in checks:
            mark = "✔" if passed else "✖"
            print(f"{mark} {label}")
        print()